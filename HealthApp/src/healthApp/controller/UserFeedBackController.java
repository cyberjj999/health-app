package healthApp.controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;

import java.util.regex.Pattern;

import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;

import java.io.IOException;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Optional;
import java.util.ResourceBundle;

import healthApp.data.UsersMapDB;
import healthApp.data.UsersMessageDB;
import healthApp.model.Users;
import healthApp.model.UsersFoodConsumption;
import healthApp.model.UsersMessage;
import javafx.collections.FXCollections;
import javafx.event.ActionEvent;

import javafx.scene.control.TextArea;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.effect.Glow;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.RadioButton;

public class UserFeedBackController implements Initializable {
	
	private static String loggedInUser;
	
	public String getLoggedInUser() {
		return loggedInUser;
	}



	public void setLoggedInUser(String loggedInUser) {
		this.loggedInUser = loggedInUser;
	}

    @FXML
    private Button verySad;

    @FXML
    private ImageView verySadImage;

    @FXML
    private Button neutral;

    @FXML
    private ImageView neutralImage;

    @FXML
    private Button sad;

    @FXML
    private ImageView sadImage;

    @FXML
    private Button veryHappy;

    @FXML
    private ImageView veryHappyImage;

    @FXML
    private Button happy;

    @FXML
    private ImageView happyImage;


	@FXML
	private ChoiceBox choicebox;
	@FXML
	private TextArea textArea;
	@FXML
	private Button submitBtn;


	private String emotion="";
	
	private Scene myScene;
	

	  @FXML
	  private ImageView backBtn;
		private ImageView locationBtn;
		@FXML
		private ImageView reminderBtn;
		@FXML
		private ImageView exerciseBtn;
		@FXML
		private ImageView homeBtn;
		@FXML
		private ImageView foodBtn;
		@FXML
		private ImageView socialBtn;
	   

@FXML
void goBack(MouseEvent event) throws IOException {
	// TODO Autogenerated
			FXMLLoader loader=new FXMLLoader();
			loader.setLocation((getClass().getResource("/healthApp/view/HomepageView.fxml")));
			 myScene=(Scene)((Node)event.getSource()).getScene();
			 Stage stage=(Stage)(myScene).getWindow();
			 Parent nextView=loader.load();
			 stage.setScene(new Scene(nextView));
			 stage.show();
}

@FXML
		public void goLocation(MouseEvent event) throws IOException {

				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#reminderBtn].onMouseClicked
			@FXML
			public void goReminder(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#exerciseBtn].onMouseClicked
			@FXML
			public void goExercise(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#homeBtn].onMouseClicked
			@FXML
			public void goHome(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/HomepageView.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#foodBtn].onMouseClicked
			@FXML
			public void goFood(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#socialBtn].onMouseClicked
			@FXML
			public void goSocial(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			
			

    @FXML
    void selectHappy(ActionEvent event) {
    	Glow glow = new Glow();
    	glow.setLevel(0.9);
    	emotion = "Happy";
    	veryHappyImage.effectProperty().set(null);
    	happyImage.effectProperty().set(glow);
    	neutralImage.effectProperty().set(null);
    	sadImage.effectProperty().set(null);
    	verySadImage.effectProperty().set(null);
    }

    @FXML
    void selectNeutral(ActionEvent event) {
    	Glow glow = new Glow();
    	glow.setLevel(0.9);
    	emotion = "Neutral";
    	veryHappyImage.effectProperty().set(null);
    	happyImage.effectProperty().set(null);
    	neutralImage.effectProperty().set(glow);
    	sadImage.effectProperty().set(null);
    	verySadImage.effectProperty().set(null);
    }

    @FXML
    void selectSad(ActionEvent event) {
    	Glow glow = new Glow();
    	glow.setLevel(0.9);
    	emotion = "Sad";
    	veryHappyImage.effectProperty().set(null);
    	happyImage.effectProperty().set(null);
    	neutralImage.effectProperty().set(null);
    	sadImage.effectProperty().set(glow);
    	verySadImage.effectProperty().set(null);
    	
    }

    @FXML
    void selectVeryHappy(ActionEvent event) {
    	Glow glow = new Glow();
    	glow.setLevel(0.9);
    	emotion = "Very happy";
    	veryHappyImage.effectProperty().set(glow);
    	happyImage.effectProperty().set(null);
    	neutralImage.effectProperty().set(null);
    	sadImage.effectProperty().set(null);
    	verySadImage.effectProperty().set(null);
    	
    	
    }

    @FXML
    void selectVerySad(ActionEvent event) {
    	Glow glow = new Glow();
    	glow.setLevel(0.9);
    	emotion = "Very sad";
    	veryHappyImage.effectProperty().set(null);
    	happyImage.effectProperty().set(null);
    	neutralImage.effectProperty().set(null);
    	sadImage.effectProperty().set(null);
    	verySadImage.effectProperty().set(glow);
    }
    
	// Event Listener on Button[#submitBtn].onAction
	@FXML
	public void submitFeedback(ActionEvent event) {
		// TODO Autogenerated!((newFood.matches("[a-zA-Z]+"))
		
		Pattern p = Pattern.compile("[a-zA-Z]+");
		
		if (textArea.getText().trim().isEmpty()) {
			showAlert("Invalid submission","The feedback field is empty");

		}
		
		

		else if(!(p.matcher(textArea.getText()).find())){
			showAlert("Invalid submission","There should be letters in the feedback field");
			System.out.println(textArea.getText());
		}
		
	
		else if (emotion=="") {
			showAlert("Invalid submission","Please select a emoji that represents your experience in this app");

		}
		
		else {
			Alert alert = new Alert(AlertType.CONFIRMATION);
    		alert.setTitle("Confirmation Dialog");
    		alert.setHeaderText("A Confirmation Dialog");
    		alert.setContentText("Are you sure?");
    		alert.setWidth(400);
    		alert.setHeight(200);
    		Optional<ButtonType> result = alert.showAndWait();
    		if (result.get() == ButtonType.OK){

    			//Check which user it is
    			//Retrieve his name to a variable
    			String category = choicebox.getValue().toString();
    			String msg = textArea.getText();
    			
    			UsersMessageDB UsersMsgDB = new UsersMessageDB();
    			

    			//check if user db dh this.
    			/*here
    			 * UsersFoodConsumptionDB UsersFoodDB = new UsersFoodConsumptionDB();
    			 *	Users loggedInUser = UsersFoodDB.checkLoggedIn;
    			 * if(UsersFoodDB.getUsers(loggedInUser.getEmail()==null){
    			 * new UsersFoodConsumption(loggedInUser.getEmail(),new ArrayList <Food>(),new ArrayList <Integer>(),new ArrayList<String>())
    			 * }
    			 * 
    			 * to here
    			 */
    		
    			/*
    			 * if (UsersMsgDB.getUsersMessage(loggedInUser.getEmail()==null){
    			 * 	    				UsersMsgDB.addUsersMessage(new UsersMessage(loggedInUser.getEmail(),new ArrayList <String>(),new ArrayList <String>(),new ArrayList <String>(),new ArrayList<String>()));

    			 * UserMessage UserMessage1 = UsersMsgDB.getUsersMessage(loggedInUser.getEmail());
    			 */
    			UsersMapDB usersDB = new UsersMapDB();
    			Users loggedInUser = usersDB.checkLoggedIn(getLoggedInUser());
    		
    			if(UsersMsgDB.getUsersMessage(loggedInUser.getEmail())==null) //,new ArrayList <RadioButton>()
    				UsersMsgDB.addUsersMessage(new UsersMessage(loggedInUser.getEmail(),new ArrayList <String>(),new ArrayList <String>(),new ArrayList <String>(),new ArrayList<String>()));
    			
    			//String name = User.getName();
    			UsersMessage UserMessage1 = UsersMsgDB.getUsersMessage(loggedInUser.getEmail());

    			ArrayList <String> message = UserMessage1.getMessage();
    			ArrayList <String> experience = UserMessage1.getExperience();
    			ArrayList <String> categoryAL = UserMessage1.getCategory();
    			ArrayList <String> DateArrayList = UserMessage1.getDate();
    			//ArrayList <String> isCheckedArrayList = UserMessage1.getIsChecked();
    			//ArrayList <RadioButton> select = UserMessage1.getSelect();
    			
    			//select.add(new RadioButton());
    			message.add(msg);
    			experience.add(emotion);
    			categoryAL.add(category);
    			DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm");
    			Date date = new Date();
    			DateArrayList.add(dateFormat.format(date).toString());
    			//isCheckedArrayList.add("");
    			
    			UserMessage1.setMessage(message);
    			UserMessage1.setExperience(experience);
    			UserMessage1.setCategory(categoryAL);
    			UserMessage1.setDate(DateArrayList);
    			//UserMessage1.setIsChecked(isCheckedArrayList);
    			
    			//UserMessage1.setSelect(select);
    			
    			UsersMsgDB.updateArrayList(UserMessage1);
    			
    			
    			Alert alert2 = new Alert(AlertType.INFORMATION);
				alert2.setTitle("Successful!");
				alert2.setHeaderText("Message successfully sent!");
				alert2.setContentText("Your message has been sent to our admins. Thank you!");

				alert2.showAndWait();
    			
				textArea.clear();
				choicebox.getSelectionModel().selectFirst();
				emotion = "";	
				veryHappyImage.effectProperty().set(null);
		    	happyImage.effectProperty().set(null);
		    	neutralImage.effectProperty().set(null);
		    	sadImage.effectProperty().set(null);
		    	verySadImage.effectProperty().set(null);
		    	
				
    		}
			else {
			    // ... user chose CANCEL or closed the dialog
			}
			
    		}
		
		
		
		}
		
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		submitBtn.setStyle("-fx-border-color: #17202A; -fx-border-width: 3px;-fx-background-color:pink;");
		choicebox.setStyle("-fx-border-color: #17202A; -fx-border-width: 3px;-fx-background-color:pink;");
		textArea.setStyle("-fx-border-color: #17202A; -fx-border-width: 3px;-fx-background-color:pink;-fx-control-inner-background:pink;");

		
		choicebox.setItems(FXCollections.observableArrayList("General", "Compliment", "Complain", "Enquiries"));
		choicebox.getSelectionModel().selectFirst();
		
		
		
		
		
		
	};
		
		
		
		
	public void showAlert(String title,String content) {
		Alert alert = new Alert(AlertType.ERROR);
		alert.setTitle(title);
		alert.setHeaderText("Error!");
		alert.setContentText(content);

		alert.showAndWait();
		}
	}
	
	
	

