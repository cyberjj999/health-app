package healthApp.controller;

import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import healthApp.model.healthApp;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.Label;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.ColumnConstraints;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Priority;
import javafx.scene.layout.RowConstraints;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class ConditionSelectionController implements Initializable {
	
	// The choices for the drop down button
	ObservableList<String> Conditions = FXCollections.observableArrayList("Back Pain", "Quadricep Pain", "Ankle Pain", "Neck Pain");
	
	private String typeOfCondition;
	
	@FXML
	private ChoiceBox<String> conditionList;
	@FXML
	private GridPane exerciseImages;
	@FXML
	private Button displayGridPaneButton;
	@FXML
	private AnchorPane AnchorPanecaonima;
	@FXML
	private Label NamePlaceHolder;
	@FXML
	private Button Physio;
	@FXML
	private Button Programs;
    @FXML
    private ImageView backBtn;
    @FXML
    private ImageView locationBtn;
    @FXML
	private ImageView reminderBtn;
	@FXML
	private ImageView exerciseBtn;
	@FXML
	private ImageView homeBtn;
	@FXML
	private ImageView foodBtn;
	@FXML
	private ImageView socialBtn;
   
	private Scene myScene;
	   @FXML
	    void goBack(MouseEvent event) throws IOException {

	    	FXMLLoader loader=new FXMLLoader();
			loader.setLocation((getClass().getResource("/healthApp/view/HomeView.fxml")));
			 myScene=(Scene)((Node)event.getSource()).getScene();
			 Stage stage=(Stage)(myScene).getWindow();
			 Parent nextView=loader.load();
			 stage.setScene(new Scene(nextView));
			 stage.show();
	    }
    
	@FXML
	public void goLocation(MouseEvent event) throws IOException {

		FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
		 myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
	}
	// Event Listener on ImageView[#reminderBtn].onMouseClicked
	@FXML
	public void goReminder(MouseEvent event) throws IOException {
		// TODO Autogenerated
		FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
		 myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
	}
	// Event Listener on ImageView[#exerciseBtn].onMouseClicked
	@FXML
	public void goExercise(MouseEvent event) throws IOException {
		// TODO Autogenerated
		FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
		 myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
	}
	// Event Listener on ImageView[#homeBtn].onMouseClicked
	@FXML
	public void goHome(MouseEvent event) throws IOException {
		// TODO Autogenerated
		FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/HomepageView.fxml")));
		 myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
	}
	// Event Listener on ImageView[#foodBtn].onMouseClicked
	@FXML
	public void goFood(MouseEvent event) throws IOException {
		// TODO Autogenerated
		FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
		 myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
	}
	// Event Listener on ImageView[#socialBtn].onMouseClicked
	@FXML
	public void goSocial(MouseEvent event) throws IOException {
		// TODO Autogenerated
		FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
		 myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
	}
	@FXML
	public void displayGridPane(ActionEvent event) {
		
		DisplaySteps.setVisible(false);
		loadImage(getconditionList());
	}

	@FXML
	private Button BirdDog1;
	
	@FXML
	private Button LowerBackStretch1;
	
	@FXML
	private Button Bridging1;
	
	@FXML
	private Button StraightLegRaises1;
	
	@FXML
	private Button WallSlides1;
	
	@FXML
	private Button LyingLegExtension1;
	
	@FXML
	private Button BallRoll1;
	
	@FXML
	private Button CalfStretch1;
	
	@FXML
	private Button HeelSitBack1;
	
	@FXML
	private Button HandClasped1;
	
	@FXML
	private Button NeckRetracted1;
	
	@FXML
	private Button SideNeck1;
	
	@FXML
	private VBox DisplaySteps;

	@FXML
	public void loadPreviousHome(ActionEvent event) throws IOException {
		
		FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/HomeView.fxml")));
		Scene myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
	}
	
	private void loadData() {
		Conditions.removeAll(Conditions);
		String backpain = "Back Pain";
		String quadpain = "Quadricep Pain";
		String anklepain = "Ankle Pain";
		String neckpain = "Neck Pain";
		Conditions.addAll(backpain,quadpain,anklepain,neckpain);
		conditionList.getItems().addAll(Conditions);
		
	}
	
	
	private void loadImage(String exercises) {
		
		if(typeOfCondition.equals("Back Pain")) {
			
			// declaring buttons and setting steps visible false
			Button BirdDog1 = new Button("Bird Dog");
			Button LowerBackStretch1 = new Button("Lower Back Stretch");
			Button Bridging1 = new Button ("Bridging");
			
			DisplaySteps.setVisible(false);
			// getting the images
			Image BirdDog = new Image("Images/BirdDog.JPG", 121,102, false, false);
			Image Bridging = new Image ("Images/Bridging.JPG",121,102,false,false);
			Image LowerBackStretch = new Image("Images/Lowerbackstretch.JPG",121,102,false,false);
			
			exerciseImages.getChildren().clear();
			exerciseImages.setVisible(true);
			exerciseImages.add(new ImageView(BirdDog),0,0);
			exerciseImages.add(new ImageView(LowerBackStretch),0,1);
			exerciseImages.add(new ImageView(Bridging),0,2);
			
			// adding the names beside the pictures
			
			exerciseImages.add(BirdDog1,1,0);
			BirdDog1.addEventHandler(MouseEvent.MOUSE_CLICKED, e-> {
				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);

				
		        try{
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);

		            
		                Label label1 = new Label("Begin on all fours with your hands directly under your shoulders and your knees directly under your hips.");
		                Label label2 = new Label("Pull your abs in to your spine. Reach your right arm forward and left leg back. Reach through your left heel to engage the muscles in the back of the leg and your butt.");
		                Label label3 = new Label("Return to the starting position, placing your hand and knee on the floor.");
		                Label label4 = new Label("Repeat on the other side to complete one rep.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
			});
			
			////////////////////////////////////////////////////////////////////////////////////
			exerciseImages.add(LowerBackStretch1,1,1);
			LowerBackStretch1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{
				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		           
		            
		                Label label1 = new Label("Begin on your hands and knees on the floor, with your hands under your shoulders and knees under your hips.");
		                Label label2 = new Label("Reach out directly in front of you, extending your arms and placing your palms flat on the floor.");
		                Label label3 = new Label("Slowly sit your hips back toward your heels, dropping your head and chest downward as your arms extend further.");
		                Label label4 = new Label("Stay here 20 to 30 seconds or even longer.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			});
			
			
			
			exerciseImages.add(Bridging1,1,2);
			Bridging1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{
				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Lie down on your back.\n");
		                Label label2 = new Label("Keep your arms at your sides.");
		                Label label3 = new Label("Lift your hips toward the ceiling.");
		                Label label4 = new Label("Keep your knees and thighs parallel.");
		                Label label5 = new Label("Hold the pose for 5 full breaths and release back to the start position.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);
		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			});
			
		}
		else if(typeOfCondition.equals("Quadricep Pain")) {
			
			//////////////////////
			Button StraightLegRaises1 = new Button("Straight Leg Raises");
			Button WallSlides1 = new Button("Wall Slides");
			Button LyingLegExtension1 = new Button ("Lying Leg Extension");
			
			DisplaySteps.setVisible(false);
			// getting the images 
			Image StraightLegRaises = new Image("Images/StraightLegRaises.JPG", 121,102, false, false);
			Image WallSlides = new Image ("Images/WallSlides.JPG",121,102,false,false);
			Image LyingLegExtension = new Image("Images/LyingLegExtension.JPG",121,102,false,false);
			
			
			
			
			// displaying the images
			exerciseImages.getChildren().clear();
			exerciseImages.setVisible(true);
			exerciseImages.add(new ImageView(StraightLegRaises),0,0);
			exerciseImages.add(new ImageView(WallSlides),0,1);
			exerciseImages.add(new ImageView(LyingLegExtension),0,2);
			
			// adding the texts beside the pictures
			exerciseImages.add(StraightLegRaises1,1,0);
			StraightLegRaises1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Sit or lie down on your back with your legs straight out in front of you.");
		                Label label2 = new Label("Bend the knee of your non-operated leg to a 90-degree angle keeping your foot flat on the floor.");
		                Label label3 = new Label("Tighten the muscles on your straight leg by trying to contract your quadriceps.");
		                Label label4 = new Label("Keep your quad tightened, and then slowly lift the operated leg six inches off the floor");
		                Label label5 = new Label("Hold for three seconds.");
		                Label label6 = new Label("Repeat this exercise");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);
		                
		                label6.maxWidth(100);
		                label6.setWrapText(true);
		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		                // Content for Step 6
		                newGridPane.add(label6,1,5);
		                newGridPane.add(new Label("Step 6"),0,5);
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
			});
			
			
			exerciseImages.add(WallSlides1,1,1);
			WallSlides1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{
				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Stand upright with your back against a wall and feet shoulder-width apart.");
		                Label label2 = new Label("Slowly bend your knees, sliding your back down the wall for a count of five until your knees are bent at a 45-degree angle.");
		                Label label3 = new Label("Hold this position for 5 seconds.");
		                Label label4 = new Label("Begin straightening your knees for a count of five, sliding up the wall until you are fully upright with knees straight.");
		                Label label5 = new Label("Repeat the above steps five more times.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			
			});
			
			exerciseImages.add(LyingLegExtension1,1,2);
			LyingLegExtension1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{
				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Lie on your back on a hard surface, preferably the floor.");
		                Label label2 = new Label("Fully extend your legs on the floor.");
		                Label label3 = new Label("Put your hands by your side and bring your leg to the ceiling without bending the leg.");
		                Label label4 = new Label("Hold it there for 10 seconds.");
		                Label label5 = new Label("Slowly bring down your leg and repeat the exercise for the other leg.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			
			});
			
		}
			
		else if(typeOfCondition.equals("Ankle Pain")) {
			
			
			//////////////////////
			Button BallRoll1 = new Button("Ball Roll");
			Button CalfStretch1 = new Button("Calf Stretch");
			Button HeelSitBack1 = new Button ("Heel Sit Back");
			// getting the images 
			Image BallRoll = new Image("Images/BallRoll.JPG", 121,102, false, false);
			Image CalfStretch = new Image ("Images/CalfStretch.JPG",121,102,false,false);
			Image HeelSitBack = new Image("Images/HeelSitBacks.JPG",121,102,false,false);
			
			// displaying the images
			exerciseImages.getChildren().clear();
			exerciseImages.setVisible(true);
			exerciseImages.add(new ImageView(BallRoll),0,0);
			exerciseImages.add(new ImageView(CalfStretch),0,1);
			exerciseImages.add(new ImageView(HeelSitBack),0,2);
			
			// adding the texts beside the pictures
			exerciseImages.add(BallRoll1,1,0);
			BallRoll1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{
				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Sit comfortably with your feet on the floor.");
		                Label label2 = new Label("Place the lacrosse ball under the arch of your foot.");
		                Label label3 = new Label("Lean forward, putting weight on your affected side. Slowly roll the ball back and forth along the arch of your foot.");
		                Label label4 = new Label("Continue for 30 to 60 seconds.");
		                Label label5 = new Label("Repeat on other side if necessary.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			
			});
			
			
			exerciseImages.add(CalfStretch1,1,1);
			CalfStretch1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{
				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Stand on the edge of a ledge that is stable for your foot.");
		                Label label2 = new Label("Lower both heels over the edge of the ledge");
		                Label label3 = new Label("Slowly raise your heels again to feel the stretch at your calf and your ankle");
		                Label label4 = new Label("Continue for 30 to 60 seconds.");
		                Label label5 = new Label("Do as many as you feel necessary");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			
			});
			
			
			exerciseImages.add(HeelSitBack1,1,2);
			HeelSitBack1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Kneel down, with one leg underneath you.");
		                Label label2 = new Label("Sit back on the heel of your leg, feeling a stretch along your shin and your ankle.");
		                Label label3 = new Label("Hold this position and then relax.");
		                Label label4 = new Label("Repeat this movement for the other leg.");
		                Label label5 = new Label("Do as many as you feel necessary");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			});
		}
			
		else if(typeOfCondition.equals("Neck Pain")){ 
			
			
			//////////////////////
			Button HandClasp1 = new Button("Hand Clasp");
			Button NeckRetractions1 = new Button("Neck Retractions");
			Button SideNeck1 = new Button ("Side Neck");
			
			// declaring the images 
			Image HandClasped = new Image("Images/HandClasped.JPG", 121,102, false, false);
			Image NeckRetractions = new Image ("Images/NeckRetractions.JPG",121,102,false,false);
			Image SideNeck = new Image("Images/SideNeck.JPG",121,102,false,false);
			
			// displaying the images
			exerciseImages.getChildren().clear();
			exerciseImages.setVisible(true);
			exerciseImages.add(new ImageView(HandClasped),0,0);
			exerciseImages.add(new ImageView(NeckRetractions),0,1);
			exerciseImages.add(new ImageView(SideNeck),0,2);
			
			// adding the texts beside the pictures
			exerciseImages.add(HandClasp1,1,0);
			HandClasp1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{
				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Stand or sit up straight.");
		                Label label2 = new Label("Clasp your hands together behind you.");
		                Label label3 = new Label("Pull the shoulders down by straightening the arms and squeezing your shoulder blades together.");
		                Label label4 = new Label("Lift your chin up as you tilt your head back just enough to feel a stretch in the front of your throat.");
		                Label label5 = new Label("Make sure to lengthen the neck up while doing this stretch so that you are not completely collapsing in the back of your neck.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			
			});
			
			
			exerciseImages.add(NeckRetractions1,1,1);
			NeckRetractions1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{

				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Lie down flat on a smooth surface and tuck the chin towards the neck.");
		                Label label2 = new Label("Place hand on the back of your head");
		                Label label3 = new Label("Actively flex the head towards the sky and hold it there for 3 seconds. Ensure you feel the stretch at the neck.");
		                Label label4 = new Label("Slowly lower your head back to normal position.");
		                Label label5 = new Label("Repeat the movement until you feel well.");

		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			
			
			});
			
			
			exerciseImages.add(SideNeck1,1,2);
			SideNeck1.addEventHandler(MouseEvent.MOUSE_CLICKED, e->{

				

				
				exerciseImages.getChildren().clear();
				exerciseImages.setVisible(false);
				DisplaySteps.setVisible(true);
				
		        try{
		        	
		           // for (int i =0 ;i<4;i++){
		        	
		            GridPane newGridPane = new GridPane();
		            newGridPane.setGridLinesVisible(true);
		            DisplaySteps.getChildren().clear();
		            DisplaySteps.getChildren().add(newGridPane);
		            
		            //i++;
		           
		            
		                Label label1 = new Label("Stand or sit up straight.");
		                Label label2 = new Label("Clasp your hands together behind you.");
		                Label label3 = new Label("Pull the shoulders down by straightening the arms and squeezing your shoulder blades together.");
		                Label label4 = new Label("Slowly tilt your head to the left side until you feel the stretch.");
		                Label label5 = new Label("Make sure to lengthen the neck up while doing this stretch so that you are not completely collapsing in the back of your neck.");
		                Label label6 = new Label("Repeat these steps for the other side until you feel stretched well.");
		                
		                label1.maxWidth(100);
		                label1.setWrapText(true);
		                
		                label2.maxWidth(100);
		                label2.setWrapText(true);
		                
		                label3.maxWidth(100);
		                label3.setWrapText(true);
		                
		                label4.maxWidth(100);
		                label4.setWrapText(true);
		                
		                label5.maxWidth(100);
		                label5.setWrapText(true);
		                
		                label6.maxWidth(100);
		                label6.setWrapText(true);

		                
		                // Content for Step 1
		                newGridPane.add(label1,1,0);
		                newGridPane.add(new Label ("Step 1"), 0, 0);
		         
		                // Content for Step 2
		                newGridPane.add(label2,1,1);
		                newGridPane.add(new Label ("Step 2"),0,1);
		                
		                // Content for Step 3
		                newGridPane.add(label3,1,2);
		                newGridPane.add(new Label ("Step 3"),0,2);
		                
		                // Content for Step 4
		                newGridPane.add(label4,1,3);
		                newGridPane.add(new Label ("Step 4"),0,3);
		                
		                // Content for Step 5
		                newGridPane.add(label5,1,4);
		                newGridPane.add(new Label("Step 5"),0,4);
		                
		               // newGridPane.add(textArea,1,0);
		               // }
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(100)); // column 1 is 200 wide
		             newGridPane.getColumnConstraints().add(new ColumnConstraints(235)); // column 2 is 500 wide
		            
		           // }
		    
		    }catch(Exception r) {
		        r.printStackTrace();
		    }
				
				
			
			
			});
		}
		
		
				
		}
	
	public GridPane getExerciseImages() {
		return exerciseImages;
	}

	public void setExerciseImages(GridPane exerciseImages) {
		this.exerciseImages = exerciseImages;
	}

	// getting data from choice box, meaning when they click
	private String getconditionList() {
		String condition = conditionList.getValue();
		 if(condition == null) {
				Alert alert2 = new Alert(AlertType.WARNING);
	            alert2.setTitle("Validate Input");
	            alert2.setHeaderText (null);
	            alert2.getDialogPane().setPrefSize(335, 600);
	            alert2.setContentText("Please select your condition.");
	            alert2.showAndWait();
	            alert2.close();
	            
	            return condition;
		 }
		this.typeOfCondition = condition;
		return this.typeOfCondition;
	}
	
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		loadData();
		exerciseImages.setVisible(false);
		DisplaySteps.setVisible(false);
		
	}
}
