package healthApp.controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Region;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.stage.Stage;


import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;

import healthApp.data.FoodDB;
import healthApp.data.UsersFoodConsumptionDB;
import healthApp.model.Food;
import healthApp.model.UsersFoodConsumption;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ListView;

public class filteredSearchResultController implements Initializable {
	@FXML
	private Button backBtn;
	@FXML
	private Label search;
	@FXML
	private TextField foodSearchField;
	@FXML
	private Label noOfResults;
    @FXML
    private VBox vBox;
    
	private String userSearch;

	private Scene myScene;

	FoodDB foodDatabase = new FoodDB();
	
	static ArrayList<String> searchResultX = new ArrayList<String>();
		
	static String inputFoodX;
	
		private ImageView locationBtn;
		@FXML
		private ImageView reminderBtn;
		@FXML
		private ImageView exerciseBtn;
		@FXML
		private ImageView homeBtn;
		@FXML
		private ImageView foodBtn;
		@FXML
		private ImageView socialBtn;
	   

    @FXML
    void goBack(MouseEvent event) throws IOException {
    	FXMLLoader loader=new FXMLLoader();
		loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
		 myScene=(Scene)((Node)event.getSource()).getScene();
		 Stage stage=(Stage)(myScene).getWindow();
		 Parent nextView=loader.load();
		 stage.setScene(new Scene(nextView));
		 stage.show();
    }

    @FXML
		public void goLocation(MouseEvent event) throws IOException {

				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#reminderBtn].onMouseClicked
			@FXML
			public void goReminder(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#exerciseBtn].onMouseClicked
			@FXML
			public void goExercise(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#homeBtn].onMouseClicked
			@FXML
			public void goHome(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/HomepageView.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#foodBtn].onMouseClicked
			@FXML
			public void goFood(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			// Event Listener on ImageView[#socialBtn].onMouseClicked
			@FXML
			public void goSocial(MouseEvent event) throws IOException {
				// TODO Autogenerated
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/NutritionTrackingHomepage.fxml")));
				 myScene=(Scene)((Node)event.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView=loader.load();
				 stage.setScene(new Scene(nextView));
				 stage.show();
			}
			
			
	

	// Event Listener on TextField[#foodSearchField].onAction
	@FXML
	public void foodSearch(ActionEvent event) throws IOException {

		
		ArrayList <String> foodList = new ArrayList <String>();
		ArrayList <Food> allFood = new ArrayList<Food>(foodDatabase.getMap().values());
		
		for (Food foodItem : allFood) {
			foodList.add(foodItem.getName());
		}
			
		//ArrayList <String> foodList = foodDataBaseApp.returnFoodList();
		
			//This is arraylist of the names of the food
			//FROM mapDB , hence it will have ALL food names
			//ArrayList <food> allFood = new ArrayList<food>(map.values());
			
			//This is the resultedFood search result
			ArrayList <String> searchResult = new ArrayList <String>();
			//String inputFood = foodSearchField.getText();
			setUserSearch(foodSearchField.getText());
			String inputFood = getUserSearch();
			
			if (inputFood.trim().length()<1) {
			//this is to check if user only enter space
				searchResult.add("invalidSearch");
			}
			
			else {
				String newFood = inputFood.replaceAll(" ","");
			
			//.matches check if the String contains something
			//In this case , it checks for if the input has alphabets or letters
			//The complement of it is use , hence the else if statement will only run if
			//the input does not have alphabet or letters
			
			if ( !((newFood.matches("[a-zA-Z]+")) || (newFood.matches("[0-9]+")))  ){
				searchResult.add("invalidSearch");
			}
		
			else {
			for (String food : foodList) {
				
				//inputFood is eg Chicken   	
				//foodProducts is eg Chicken Rice
				if (food.toUpperCase().contains(inputFood.toUpperCase()))
				searchResult.add(food);
				}
			}
			
		}
			
			//At this point , you basically just modified the searchResult arrayList
			//based on what user has entered in the textfield 
			
			FXMLLoader loader=new FXMLLoader();
			loader.setLocation((getClass().getResource("/healthApp/view/filteredSearchResult.fxml")));
			myScene=(Scene)((Node)event.getSource()).getScene();
			Stage stage=(Stage)(myScene).getWindow();
			Parent nextView=loader.load();
			stage.setScene(new Scene(nextView));
			stage.show();			
			 
			filteredSearchResultController fSRC = loader.getController();
			fSRC.setSearchResult(inputFood);
			
			if(searchResult.isEmpty())
				System.out.println("Food not found!");
			
			else if(searchResult.get(0) == "invalidSearch")
				System.out.println("Invalid search!\nPlease enter a valid a food name!");
			
			else
			System.out.println(searchResult);
			
			fSRC.addToVbox(searchResult);
			
	

			
			fSRC.setSearchResultX(searchResult);
			fSRC.setInputFoodX(inputFood);
			
			//selectedFoodController sFC = loader.getController();
			//sFC.setSearchResult(searchResult);
	}
	
		//selectedFoodController sFC = new selectedFoodController();
		
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
	}
	
	
	
	public void setSearchResult(String search) {
		this.search.setText("You searched for: " +search);
		
	}
	
	public void addToVbox(ArrayList <String> searchResult) {
		int foodCount = 0;
		Label invalidLabel = new Label("Invalid search! Please enter a valid food name!");
		Label foodNotFound = new Label("Food not found!");
		
		
		if (searchResult.isEmpty()) {
			vBox.getChildren().add(foodNotFound);

		}
		
		else if(searchResult.get(0)=="invalidSearch") {
			vBox.getChildren().add(invalidLabel);
		}
		
		
		
		else {
		for(String food : searchResult) {
			Button newButton = new Button(food);
			newButton.setMinWidth(125);
			newButton.setMinHeight(20);
			//newButton.setStyle("-fx-background-color: #33f4ff; ");
			newButton.setStyle("-fx-border-color: #17202A; -fx-border-width: 3px;-fx-background-color:pink;");
			
			Label smallDivisor = new Label("");
			smallDivisor.setMaxHeight(6);
			smallDivisor.setMinHeight(5);
			
			//vBox.getChildren().add(new Button(food));
			vBox.getChildren().add(newButton);
			vBox.getChildren().add(smallDivisor);
			//Get eg first child of VBOX THEN add event listener 
			//vBox.getChildren().get(foodCount).addEventHandler(MouseEvent.MOUSE_ENTERED,e->{
		
		
			
			newButton.addEventHandler(MouseEvent.MOUSE_CLICKED,e->{
				
				FXMLLoader loader=new FXMLLoader();
				loader.setLocation((getClass().getResource("/healthApp/view/selectedFood.fxml")));
				 myScene=(Scene)((Node)e.getSource()).getScene();
				 Stage stage=(Stage)(myScene).getWindow();
				 Parent nextView;
				try {
					nextView = loader.load();
					 stage.setScene(new Scene(nextView));
					 stage.show();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				ArrayList <Food> allFood = new ArrayList<Food>(foodDatabase.getMap().values());
				
				selectedFoodController sFC = loader.getController();
				sFC.setFoodName(food);
				sFC.loadImage(food);
				for(Food foodObject : allFood) {
					if (food.equals(foodObject.getName())) {
						sFC.setDescription(foodObject.getDescription());
						sFC.setServingSize(foodObject.getServingSize() ,foodObject.getServingSizeUnit());
						sFC.setCalories(foodObject.getCalories());
						sFC.setProtein(foodObject.getProtein());
						sFC.setCarbs(foodObject.getCarbs());
						sFC.setFats(foodObject.getFats());
						sFC.setSodium(foodObject.getSodium());
						sFC.setCholesterol(foodObject.getCholesterol());
						sFC.setSugar(foodObject.getSugar());
					}
					
				}
				
				
				
				
			});
			
			
			foodCount++;
			}
		}
		ArrayList <Food> allFood = new ArrayList<Food>(foodDatabase.getMap().values());
		int noOfFood = allFood.size();
		
		noOfResults.setText("Showing " + foodCount + " out of " + noOfFood +" results");
		
		//System.out.println(vBox.getChildren().get(2);
	}
	
	public void setSearchResultX(ArrayList<String> searchResult) {
		this.searchResultX = searchResult;
	
	}
	
	public ArrayList<String> getSearchResultX(){
		return searchResultX;
	}
	
	public void setInputFoodX (String inputFood) {
		this.inputFoodX = inputFood;
	}
	
	public void setUserSearch(String userSearch) {
		this.userSearch = userSearch;
	}
	
	public String getUserSearch() {
		return userSearch;
	}
	
	public static void main(String [] args) {

	}

}
